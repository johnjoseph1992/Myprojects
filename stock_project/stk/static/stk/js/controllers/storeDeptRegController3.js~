//code to add department sublocations....
		app.controller("storeDeptRegCtrl", function($scope, $http) {
			$scope.sub_locations = [];
			$scope.locationPart = false;
			$scope.mainStoreUpdatePart = false;

			//manage tabs...
			$scope.mainStoreRegisterTab = true;
			$scope.deptRegisterTab = false;
			$scope.subCatRegisterTab = false;
			$scope.mainStoreDetailsTab = false;
			$scope.deptDetailsTab = false;

			$scope.mainStoreRegisterTabClicked = function(){
				$scope.mainStoreRegisterTab = true;
				$scope.deptRegisterTab = false;
				$scope.subCatRegisterTab = false;
				$scope.mainStoreDetailsTab = false;
				$scope.deptDetailsTab = false;
			}

			$scope.deptRegisterTabClicked = function(){
				$scope.mainStoreRegisterTab = false;
				$scope.deptRegisterTab = true;
				$scope.subCatRegisterTab = false;
				$scope.mainStoreDetailsTab = false;
				$scope.deptDetailsTab = false;
			}

			$scope.subCatRegisterTabClicked = function(){
				$scope.mainStoreRegisterTab = false;
				$scope.deptRegisterTab = false;
				$scope.subCatRegisterTab = true;
				$scope.mainStoreDetailsTab = false;
				$scope.deptDetailsTab = false;
			}

			$scope.mainStoreDetailsTabClicked = function(){
				$scope.mainStoreRegisterTab = false;
				$scope.deptRegisterTab = false;
				$scope.subCatRegisterTab = false;
				$scope.mainStoreDetailsTab = true;
				$scope.deptDetailsTab = false;
			}

			$scope.deptDetailsTabClicked = function(){
				$scope.mainStoreRegisterTab = false;
				$scope.deptRegisterTab = false;
				$scope.subCatRegisterTab = false;
				$scope.mainStoreDetailsTab = false;
				$scope.deptDetailsTab = true;
			}
			//manage tabs...
			
			
			
			//vallidation...
			$scope.validate_mainstore_name = true;
			$scope.validate_dept_name = true;
			$scope.validate_subcat_name = true;
			/*var numeric = [0,1,2,3,4,5,6,7,8,9];
			var alpha = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','m','n','b','v','c','x','z','Q','W','E','R','T','Y','U','I','O','P','L','K','J','H','G','F','D','S','A','Z','X','C','V','B','N','M'];
			var special = ['~','!','@','#','$','%','^','&','*','(',')','_','+','}','{','|','\'','\"',':','?','>','<','`','-','=','[',']'    ,'\\',',',';',',','.','/'];*/
			
			$scope.nameChange = function(){
				for(var ch=0;ch < $scope.mainstore_submit_model.length;ch++){
					if(isLetter($scope.mainstore_submit_model[ch]) || isDigit($scope.mainstore_submit_model[ch]) || isBlank($scope.mainstore_submit_model[ch])){
						$scope.validate_mainstore_name = true;
					}
					else{

						alertModel("Info","only characters and digits are allowed.");
						$scope.validate_mainstore_name = false;
						$scope.mainstore_submit_model="";
						return;
					}	
				}
			}
			
			$scope.validateMainstore = function(){
				if(($scope.mainstore_submit_model == null)||($scope.mainstore_submit_model == "")){
					alertModel("Info","Mainstore name cannot be blank.");
					$scope.validate_mainstore_name = false;
					return;
				}
				if($scope.mainstore_submit_model.length >= 40){
					alertModel("Info","Mainstore name must be maximum of 40 letters.");
					$scope.validate_mainstore_name = false;
					return;
				}
				else{$scope.validate_mainstore_name = true;}
			}
			
			
			$scope.deptTextChange = function(){
				for(var k=0;k < $scope.dept_name_model.length;k++){
					if(isLetter($scope.dept_name_model[k]) || isDigit($scope.dept_name_model[k]) || isBlank($scope.dept_name_model[k])){
						$scope.validate_dept_name = true;
					}
					else{

						alertModel("Info","only characters and digits are allowed.");
						$scope.validate_dept_name = false;
						$scope.dept_name_model="";
						return;
					}	
				}
			}
			
			$scope.locationTextChange = function(){
				for(var k=0;k < $scope.addMe.length;k++){
					if(isLetter($scope.addMe[k]) || isDigit($scope.addMe[k]) || isBlank($scope.addMe[k])){
						$scope.validate_dept_name = true;
					}
					else{

						alertModel("Info","only characters and digits are allowed.");
						$scope.validate_dept_name = false;
						$scope.addMe="";
						return;
					}	
				}
			}
			
			$scope.validateDept = function(){
				if(($scope.dept_name_model == null)||($scope.dept_name_model == "")){
					alertModel("Info","Dept name cannot be blank.");
					$scope.validate_dept_name = false;
					return;
				}
				if($scope.dept_name_model.length >= 40){
					alertModel("Info","Dept name must be maximum of 40 letters.");
					$scope.validate_dept_name = false;
					return;
				}
				if($scope.sub_locations.length == 0){
					alertModel("Info","Give Minimum one sublocation.");
					$scope.validate_dept_name = false;
					return;
				}
				if(($scope.select_mainstore_model == null)){
					alertModel("Info","Select an attached mainstore.");
					$scope.validate_dept_name = false;
					return;
				}
				if($scope.addMe.length >= 40){
					alertModel("Info","Location name must be maximum of 40 letters.");
					$scope.validate_dept_name = false;
					return;
				}
				if(($scope.select_mainstore_model == null)){
					alertModel("Info","Select an attached mainstore.");
					$scope.validate_dept_name = false;
					return;
				}
				else{$scope.validate_dept_name = true;}
			}
			
			
			$scope.subcatTextChange = function(){
				for(var k=0;k < $scope.subcat_submit_model.length;k++){
					if(isLetter($scope.subcat_submit_model[k]) || isDigit($scope.subcat_submit_model[k]) || isBlank($scope.subcat_submit_model[k])){
						$scope.validate_subcat_name = true;
					}
					else{

						alertModel("Info","only characters and digits are allowed.");
						$scope.validate_subcat_name = false;
						$scope.subcat_submit_model="";
						return;
					}	
				}
			}
			
			$scope.validateSubcat = function(){
				if(($scope.subcat_submit_model == null)||($scope.subcat_submit_model == "")){
					alertModel("Info","Subcategory name cannot be blank.");
					$scope.validate_subcat_name = false;
					return;
				}
				if($scope.subcat_submit_model.length >= 20){
					alertModel("Info","Subcategory name must be maximum of 40 letters.");
					$scope.validate_subcat_name = false;
					return;
				}
				else{$scope.validate_subcat_name = true;}
			}
			
			//vallidation end...
			


			//load the selectbox with mainstore names...
			$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/loadMainstores/"
				}).then(function mySucces(response) {
					$scope.main_stores = response.data.StoreMaster;
				}, function myError(response) {

				});//loading selectbox end...

			//load the selectbox with mainstore names...
			$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/loadDeptNames/"
				}).then(function mySucces(response) {
					$scope.depts = response.data.Dept;
				}, function myError(response) {

				});//loading selectbox end...

			
			/*$scope.mainstorePress = function(e){
				if((e.keyCode>=65) && (e.keyCode<=90) || (e.keyCode>=48) && (e.keyCode<=57)){$scope.mainstore_box_err="permit"}
				else{$scope.mainstore_box_err="not permit"}
			}

			$scope.validateMainStore = function(){

			}*/

			//click mainstore submitbutton of store registration...
			$scope.mainstoreSubmit = function (){

				$scope.validateMainstore();
				if($scope.validate_mainstore_name == false){return;}

				$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/mainstoreRegistration/",
					params: {submit_mainstore: $scope.mainstore_submit_model}

				  }).then(function mySucces(response) {
						if(response.data == "success"){
							alert("Data successfully saved.");

							//load (refresh) the selectbox with mainstore names after submited successfully...
							$http({
								method : "GET",
								url : "http://stock.fisat.edu:8000/stockapp/loadMainstores/"
							}).then(function mySucces(response) {
								$scope.main_stores = response.data.StoreMaster;
							}, function myError(response) {
								//$scope.myWelcome = response.statusText;
							});//loading selectbox end...
						}
					}, function myError(response) {
					  //$scope.myResponse = response.statusText;
				  });
			}
			//mainstore submit end...


			$scope.addItem = function () {
				$scope.errortext = "";
				if (!$scope.addMe) {return;}
				if ($scope.sub_locations.indexOf($scope.addMe.toUpperCase()) == -1) {
					$scope.sub_locations.push($scope.addMe.toUpperCase());
				} else {
					$scope.errortext = "Location Already Present";
				}
			}
			$scope.removeItem = function (x) {
				$scope.errortext = "";    
				$scope.sub_locations.splice(x, 1);
			}

			//click department,subdept submitbutton of store registration --> dept registration...
			$scope.deptSubdeptSubmit = function(){
				$scope.validateDept();
				if($scope.validate_dept_name == false){return;}

				var jsonSubLocations=angular.toJson($scope.sub_locations);
				//var objectToSerialize={'sublocations':jsonSubLocations};
				$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/deptRegistration/",
					params: {sublocations: jsonSubLocations,dept_name: $scope.dept_name_model, select_mainstore: $scope.select_mainstore_model}

				  }).then(function mySucces(response) {
						if(response.data == "success"){
							alert("Data saved successfully");
						}
						else{
							alert(response.data);
						}
					}, function myError(response) {
					  //$scope.myResponse = response.statusText;
				  });
			}//deptSubdeptSubmit() end...

	
			//submit sub category...
			$scope.subcatSubmit = function(){
			
				$scope.validateSubcat();
				if($scope.validate_subcat_name == false){return;}
				
				$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/subcategoryRegistration/",
					params: {sub_cat_name: $scope.subcat_submit_model}

				  }).then(function mySucces(response) {
						if(response.data == "success"){
							alert("Data successfully saved.");
						}
						else{
							alert(response.data);
						}
					}, function myError(response) {
					  //$scope.myResponse = response.statusText;
				  });
			}

			//load update part
			$scope.mainStoreRowClicked = function(mainstore_object, index_value){
				$scope.selected_mainstore_id = mainstore_object.main_store_id
				$scope.selected_main_store_name_update = mainstore_object.main_store_name
				$scope.mainstore_update_model = mainstore_object.main_store_name
				$scope.mainStoreUpdatePart = true;
			}

			//load update part
			$scope.deptRowClicked = function(dept_object, index_value){
				$scope.selected_dept_id = dept_object.dept_id
				$scope.selected_dept = dept_object.dept_name
				$scope.locationPart = true;

				$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/loadSubLocationNames/",
					params: {dept_id: dept_object.dept_id}

				  }).then(function mySucces(response) {
						$scope.locations = response.data.Location;
					}, function myError(response) {
					  //$scope.myResponse = response.statusText;
				  });
			}
	

			$scope.updateMainStore = function(){
				$http({
					method : "GET",
					url : "http://stock.fisat.edu:8000/stockapp/updateMainStore/",
					params: {new_main_store_name: $scope.mainstore_update_model, main_store_id: $scope.selected_mainstore_id}

				  }).then(function mySucces(response) {
						if(response.data == "success"){
							alert("Data Updated Successfully.");
							$scope.mainStoreUpdatePart = false;
						}
						else{
							alert(response.data);
						}
					}, function myError(response) {
					  //$scope.myResponse = response.statusText;
				  });

					//load the selectbox with mainstore names...
					$http({
							method : "GET",
							url : "http://stock.fisat.edu:8000/stockapp/loadMainstores/"
						}).then(function mySucces(response) {
							$scope.main_stores = response.data.StoreMaster;
						}, function myError(response) {

						});//loading selectbox end...
			}
			
			


		}); //controller end...






















